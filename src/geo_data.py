# src/geo_data.py
import pandas as pd
import random

class GeoDataFetcher:
    def __init__(self):
        # Base de données des pays et de leurs coordonnées
        self.country_data = {
            "USA": {"lat": 37.0902, "lon": -95.7129, "color": "#FF0000"},
            "China": {"lat": 35.8617, "lon": 104.1954, "color": "#0000FF"},
            "Japan": {"lat": 36.2048, "lon": 138.2529, "color": "#00FF00"},
            "Germany": {"lat": 51.1657, "lon": 10.4515, "color": "#FFFF00"},
            "UK": {"lat": 55.3781, "lon": -3.4360, "color": "#00FFFF"},
            "India": {"lat": 20.5937, "lon": 78.9629, "color": "#FF00FF"},
            "France": {"lat": 46.2276, "lon": 2.2137, "color": "#800080"},
            "Canada": {"lat": 56.1304, "lon": -106.3468, "color": "#FFA500"},
            "Australia": {"lat": -25.2744, "lon": 133.7751, "color": "#008000"},
            "Brazil": {"lat": -14.2350, "lon": -51.9253, "color": "#008080"},
        }
        
        # Base de données des entreprises avec leur pays d'origine
        self.company_origins = {
            "AAPL": "USA",
            "MSFT": "USA",
            "GOOGL": "USA",
            "META": "USA",
            "NVDA": "USA",
            "TSLA": "USA",
            "ADBE": "USA",
            "INTC": "USA",
            "CSCO": "USA",
            "ORCL": "USA",
            "IBM": "USA",
            "QCOM": "USA",
            "TXN": "USA",
            "AVGO": "USA",
            "AMD": "USA",
            "CRM": "USA",
            "ADP": "USA",
            "INTU": "USA",
            "NOW": "USA",
            "AMAT": "USA",
            "MU": "USA",
            "ADI": "USA",
            "LRCX": "USA",
            "KLAC": "USA",
            "CDNS": "USA",
            "SNPS": "USA",
            "ANET": "USA",
            "FTNT": "USA",
            "NXPI": "USA",
            "MRVL": "USA",
            "PANW": "USA",
            "PYPL": "USA",
            "SQ": "USA",
            "SHOP": "Canada",
            "ZM": "USA",
            "TEAM": "USA",
            "OKTA": "USA",
            "CRWD": "USA",
            "ZS": "USA",
            "NET": "USA",
            "NEE": "USA",
            "DUK": "USA",
            "SO": "USA",
            "D": "USA",
            "EXC": "USA",
            "AEP": "USA",
            "PEG": "USA",
            "ED": "USA",
            "EIX": "USA",
            "ES": "USA",
            "FE": "USA",
            "PPL": "USA",
            "WEC": "USA",
            "XEL": "USA",
            "AEE": "USA",
            "ETR": "USA",
            "CMS": "USA",
            "AWK": "USA",
            "ATO": "USA",
            "SRE": "USA",
            "CNP": "USA",
            "PCG": "USA",
            "NI": "USA",
            "DTE": "USA",
            "LNT": "USA",
            "EVRG": "USA",
            "AGR": "USA",
            "BEP": "Canada",
            "BIPC": "Canada",
            "JNJ": "USA",
            "PFE": "USA",
            "UNH": "USA",
            "MRK": "USA",
            "ABT": "USA",
            "TMO": "USA",
            "BMY": "USA",
            "AMGN": "USA",
            "GILD": "USA",
            "CVS": "USA",
            "LLY": "USA",
            "ABBV": "USA",
            "MDT": "USA",
            "VRTX": "USA",
            "REGN": "USA",
            "DHR": "USA",
            "SYK": "USA",
            "BDX": "USA",
            "ISRG": "USA",
            "ZTS": "USA",
            "HCA": "USA",
            "CI": "USA",
            "ANTM": "USA",
            "HUM": "USA",
            "IQV": "USA",
            "EW": "USA",
            "IDXX": "USA",
            "ALGN": "USA",
            "MRNA": "USA",
            "BNTX": "Germany",
            "VTRS": "USA",
            "BAX": "USA",
            "BIIB": "USA",
            "ILMN": "USA",
            "DGX": "USA",
            "LH": "USA",
            "UHS": "USA",
            "HOLX": "USA",
            "DXCM": "USA",
            "STE": "USA",
            "PG": "USA",
            "KO": "USA",
            "PEP": "USA",
            "WMT": "USA",
            "COST": "USA",
            "MO": "USA",
            "PM": "USA",
            "MDLZ": "USA",
            "CL": "USA",
            "KHC": "USA",
            "EL": "USA",
            "KMB": "USA",
            "STZ": "USA",
            "CLX": "USA",
            "SJM": "USA",
            "CHD": "USA",
            "CAG": "USA",
            "HSY": "USA",
            "GIS": "USA",
            "ADM": "USA",
            "TSN": "USA",
            "MKC": "USA",
            "CPB": "USA",
            "LW": "USA",
            "TAP": "USA",
            "BF-B": "USA",
            "MNST": "USA",
            "FLO": "USA",
            "SYY": "USA",
            "KR": "USA",
            "K": "USA",
            "COTY": "USA",
            "TGT": "USA",
            "HD": "USA",
            "LOW": "USA",
            "DG": "USA",
            "DLTR": "USA",
            "FIVE": "USA",
            "BURL": "USA",
            "ROST": "USA",
            "TJX": "USA",
            "JPM": "USA",
            "BAC": "USA",
            "V": "USA",
            "MA": "USA",
            "WFC": "USA",
            "C": "USA",
            "GS": "USA",
            "AXP": "USA",
            "MS": "USA",
            "BLK": "USA",
            "SCHW": "USA",
            "COF": "USA",
            "USB": "USA",
            "PNC": "USA",
            "TFC": "USA",
            "TD": "Canada",
            "CME": "USA",
            "ICE": "USA",
            "AON": "UK",
            "MMC": "USA",
            "AJG": "USA",
            "SPGI": "USA",
            "MCO": "USA",
            "FIS": "USA",
            "FISV": "USA",
            "NDAQ": "USA",
            "CBOE": "USA",
            "MKTX": "USA",
            "RJF": "USA",
            "RY": "Canada",
            "BNS": "Canada",
            "BMO": "Canada",
            "ALLY": "USA",
            "KEY": "USA",
            "CFG": "USA",
            "HBAN": "USA",
            "MTB": "USA",
            "RF": "USA",
            "ZION": "USA",
            "GE": "USA",
            "HON": "USA",
            "MMM": "USA",
            "BA": "USA",
            "CAT": "USA",
            "UNP": "USA",
            "DE": "USA",
            "RTX": "USA",
            "LMT": "USA",
            "GD": "USA",
            "NOC": "USA",
            "ITW": "USA",
            "EMR": "USA",
            "ETN": "USA",
            "WM": "USA",
            "RSG": "USA",
            "FDX": "USA",
            "UPS": "USA",
            "CSX": "USA",
            "NSC": "USA",
            "CP": "Canada",
            "CNI": "Canada",
            "DAL": "USA",
            "UAL": "USA",
            "LUV": "USA",
            "AAL": "USA",
            "DOV": "USA",
            "FTV": "USA",
            "IR": "USA",
            "OTIS": "USA",
            "TT": "USA",
            "PH": "USA",
            "ROK": "USA",
            "SWK": "USA",
            "AME": "USA",
            "GNRC": "USA",
            "JCI": "Ireland",
            "PWR": "USA",
            "WAB": "USA",
            "XYL": "USA",
            "WSO": "USA",
            "FAST": "USA",
            "O": "USA",
            "AMT": "USA",
            "PLD": "USA",
            "CCI": "USA",
            "EQIX": "USA",
            "DLR": "USA",
            "PSA": "USA",
            "SPG": "USA",
            "AVB": "USA",
            "EQR": "USA",
            "VTR": "USA",
            "WELL": "USA",
            "WY": "USA",
            "EXR": "USA",
            "MAA": "USA",
            "ESS": "USA",
            "UDR": "USA",
            "SBAC": "USA",
            "IRM": "USA",
            "ARE": "USA",
            "REG": "USA",
            "KIM": "USA",
            "FRT": "USA",
            "VICI": "USA",
            "STOR": "USA",
            "NSA": "USA",
            "LAMR": "USA",
            "GLPI": "USA",
            "CPT": "USA",
            "ACC": "USA",
            "XOM": "USA",
            "CVX": "USA",
            "SHEL": "UK",
            "TTE": "France",
            "COP": "USA",
            "EOG": "USA",
            "PXD": "USA",
            "MPC": "USA",
            "PSX": "USA",
            "VLO": "USA",
            "OXY": "USA",
            "HES": "USA",
            "DVN": "USA",
            "FANG": "USA",
            "CTRA": "USA",
            "EQT": "USA",
            "MRO": "USA",
            "HAL": "USA",
            "SLB": "USA",
            "BKR": "USA",
            "NOV": "USA",
            "FTI": "UK",
            "LNG": "USA",
            "ET": "USA",
            "EPD": "USA",
            "WMB": "USA",
            "OKE": "USA",
            "KMI": "USA",
            "TRP": "Canada",
            "ENB": "Canada",
            "DIS": "USA",
            "NFLX": "USA",
            "CMCSA": "USA",
            "T": "USA",
            "VZ": "USA",
            "TMUS": "USA",
            "CHTR": "USA",
            "EA": "USA",
            "TTWO": "USA",
            "ATVI": "USA",
            "ROKU": "USA",
            "LYV": "USA",
            "NWSA": "USA",
            "FOXA": "USA",
            "IPG": "USA",
            "OMC": "USA",
            "WPP": "UK",
            "DISH": "USA",
            "SIRI": "USA",
            "LGF-A": "USA",
            "IAC": "USA",
            "MTCH": "USA",
            "BIDU": "China",
            "JD": "China",
            "BABA": "China",
            "TME": "China",
            "YY": "China",
            "DOYU": "China",
            "HUYA": "China",
            "IQ": "China",
        }
    
    def get_geo_data(self, ticker):
        MAX_COUNTRIES = 5
        # Récupérer le pays d'origine
        origin_country = self.company_origins.get(ticker, "USA")
        
        # Créer les données avec le pays d'origine comme principal
        data = [{
            "country": origin_country,
            "weight": 0.85,
            **self.country_data[origin_country]
        }]
        
        # Ajouter des pays secondaires pertinents selon le pays d'origine
        relevant_countries = self._get_relevant_secondary_countries(origin_country)
        secondary_countries = relevant_countries[:MAX_COUNTRIES-1]
        
        # Répartir les 15% restants entre les pays secondaires
        total_weight = 0.15
        weight_per_country = total_weight / len(secondary_countries)
        
        for country in secondary_countries:
            data.append({
                "country": country,
                "weight": weight_per_country,
                **self.country_data[country]
            })
        
        return data
    
    def _get_relevant_secondary_countries(self, origin_country):
        # Définir des partenaires économiques pertinents par pays
        economic_partners = {
            "USA": ["Canada", "China", "Germany", "UK", "Japan"],
            "China": ["USA", "Japan", "Germany", "Australia", "India"],
            "Japan": ["USA", "China", "Australia", "Germany", "India"],
            "Germany": ["USA", "UK", "France", "China", "Japan"],
            "UK": ["USA", "Germany", "France", "China", "Australia"],
            "France": ["Germany", "UK", "USA", "China", "Australia"],
            "Canada": ["USA", "UK", "China", "Germany", "Japan"],
            "Australia": ["China", "Japan", "USA", "UK", "India"],
            "India": ["USA", "China", "Japan", "Germany", "Australia"],
            "Brazil": ["USA", "China", "Germany", "UK", "Argentina"],
        }
        
        # Retourner les 3 premiers partenaires
        return economic_partners.get(origin_country, ["USA", "China", "Germany"])[:3]
    
    def to_dataframe(self, data):
        """Convertit les données géo en DataFrame"""
        df = pd.DataFrame(data)
        df['size'] = df['weight'] * 50  # Taille proportionnelle au poids
        return df